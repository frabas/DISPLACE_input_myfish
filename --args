
R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
>  # CALLED FROM DISPLACE when dyn_pop_sce.option(Options::avai_updater_on)
> 
>  ##First read in the arguments listed at the command line
> args=(commandArgs(TRUE))
> 
> ##args is now a list of character vectors
> ## First check to see if arguments are passed.
> ## Then cycle through each element of the list and evaluate the expressions.
> if(length(args)==0){
+     print("No arguments supplied to input2AvaiUpdater. Take pop 0")
+  pop <-0
+  }else{
+     print("Arguments supplied to input2AvaiUpdater")
+     for(i in 1:length(args)){
+          eval(parse(text=args[[i]]))
+     }
+ }
[1] "No arguments supplied to input2AvaiUpdater. Take pop 0"
> 
> 
> 
>  general <- list()
> 
>  general$application           <- "myfish"
> 
>  if(.Platform$OS.type == "unix") {
+   general$main_path         <- file.path("~","ibm_vessels",paste("DISPLACE_input_", general$application, sep=''))
+   }
>  if(.Platform$OS.type == "windows") {
+     general$main_path         <- file.path("C:","Users","fbas","Documents","GitHub", paste("DISPLACE_input_", general$application, sep=''))
+   }
> 
>  obj <- data.frame(Survey=NA, Year=c(2014,2014), ShootLon=c(18.79,11.0450), ShootLat=c(55.8667,54.0875),
+                       Stock="COD.2224", StockId=10, nb_indiv.0=100, nb_indiv.1=10, nb_indiv.2=1,
+                       nb_indiv.3=1, nb_indiv.4=1, nb_indiv.5=1, nb_indiv.6=1, nb_indiv.7=1, nb_indiv.8=1, nb_indiv.9=1,
+                       nb_indiv.10=1, nb_indiv.11=1, nb_indiv.12=1, nb_indiv.13=1)  # caution: THE FORMAT IS NOT FLEXIBLE AT ALL
> 
>  
>  # ...or a more realistic input file:
>  if(TRUE) obj <- read.table(file.path(general$main_path, paste("popsspe_", general$application, sep=''), 
+                                   "static_avai", "input_file_for_displace_merger.csv"), sep=";", header=TRUE)
>  
>  obj <- obj[,c("Survey", "Year", "ShootLon", "ShootLat", "Stock", "StockId", paste("nb_indiv.", 0:13, sep=""))]   # caution: THE FORMAT IS NOT FLEXIBLE AT ALL
>  
>  # make lighter data for the testing purpose....
>  obj <-  obj[obj$StockId %in% pop,]
>  
>  if(nrow(obj)==0) stop(paste("This StockId", pop, "is not in the displace_input_for_data_merger.csv file!!"))
> 
>  write.table(obj, file= file.path( general$main_path, paste("popsspe_", general$application, sep=''), "static_avai",
+              "displace_input_for_data_merger.dat"), sep=" ", row.names=FALSE, quote=FALSE)   ## CAUTION file is .dat and sep is white space
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
   0.32    0.06    0.37 
